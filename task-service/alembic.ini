# task-service/alembic.ini
# A generic Alembic configuration file.
# Rendered from template repository: https://github.com/sqlalchemy/alembic

# Reference Documentation: https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file


[alembic]
# path to migration scripts
script_location = alembic

# Template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that is installable
# with pip install python-dateutil.
# Any required timezone name works, such as UTC, US/Eastern, etc.
# timezone = UTC

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
# prepend_sys_path = .


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
# Указываем обработчик console, а не stderr, чтобы избежать дублирования
handlers = console
qualname = 

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.
# (Valid levels for Python logging are "DEBUG", "INFO", "WARN",
# "ERROR", "CRITICAL".)

[logger_alembic]
level = INFO
handlers =
qualname = alembic


[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic


[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
# Конфигурация для поддержки UTF-8, если логгер не справляется
# class = logging.Formatter
# encoding = utf-8


# Set to 'true' to allow .pyc and .pyo files without a corresponding
# .py file to be execute and imported
# (required for zipimport support)
pyc_imports = false


# -- 以下是特定于应用程序的配置 --

# SQLAlchemy 数据库连接字符串 (переопределяется в env.py из настроек приложения)
# sqlalchemy.url = driver://user:pass@host/db 